[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "metaforr",
    "section": "",
    "text": "1 Introduction\nR is fun. Why?\nR is considered fun primarily due to its community and extensive package ecosystem. The active and supportive community fosters a very collaborative environment, making learning enjoyable. The wealth of packages available in R facilitates efficient data analysis, visualization, and modeling, enabling users to tackle complex tasks with ease. Moreover, the language’s flexibility encourages creativity and customization, allowing users to create tailored solutions. Its intuitive syntax and widespread use across academia and various industries further contribute to its appeal, making the journey of learning and using R an engaging and rewarding experience.\nPython might let you fly, but R will make your data dance the tango.\nCode\nlibrary(\"cowsay\")\nsay(\"when in doubt, puRRR it out!\", \"cat\")\n\n\n\n -------------- \nwhen in doubt, puRRR it out! \n --------------\n    \\\n      \\\n        \\\n            |\\___/|\n          ==) ^Y^ (==\n            \\  ^  /\n             )=*=(\n            /     \\\n            |     |\n           /| | | |\\\n           \\| | |_|/\\\n      jgs  //_// ___/\n               \\_)\nLike the cat said, the innate advantage with R is how quickly we can visualize ideas.\n[BUT]\nFinding a good R library is demanding. ggplot2 is might not be the answer for everything. So, we have tasked ourselves to use statistical methods to explore and visualize entirety of CRAN packages using what we learnt from STATGR5702 at Columbia University."
  },
  {
    "objectID": "index.html#our-work",
    "href": "index.html#our-work",
    "title": "metaforr",
    "section": "1.1 Our Work",
    "text": "1.1 Our Work\nResults (our findings) will influence our builds. NOTE: As we explore data further, we hope to elaborate more on “Results” section, and possibly “Build” section.\n\nData: Find appropriate parameters to judge a package.\n\nClean the available package’s data.\nRetain features that well describe a package’s relevance.\n\nResults: Research the data.\n\nRelevance is measure via trending usage data and a package usage history available via pkgsearch package.\nProvide a comprehensive understanding of factors influencing a package’s popularity and characteristics within the ecosystem.\n\nInteractive Graphs:\n\nBuild a keystroke animation using d3 which animates dependency graph of queried package.\nBuild a package suggester by tokenizing keywords associated with each package’s metadata.\nBuild a rolling package suggester influenced by factors that we find to be appropriate.\n\n\n\n1.1.1 Where?\n\nData Cleaning is in Data section.\nResearch Results are in Results section.\nPlayable Graphs are in Interactive Graph section."
  },
  {
    "objectID": "index.html#outcome",
    "href": "index.html#outcome",
    "title": "metaforr",
    "section": "1.2 Outcome",
    "text": "1.2 Outcome\nWe hope to make this website a one-stop-shop for anyone trying to find good R packages!"
  },
  {
    "objectID": "index.html#data-sources",
    "href": "index.html#data-sources",
    "title": "metaforr",
    "section": "1.3 Data Sources",
    "text": "1.3 Data Sources\nR packages used:\n\navailable [CRAN]: This package let us “Check if the Title of a Package is Available, Appropriate and Interesting”.\npkgsearch [CRAN]: This package helped us “Search CRAN metadata about packages by keyword, popularity, recent activity, package name and more. Uses the ‘R-hub’ search server, see https://r-pkg.org and the CRAN metadata database, that contains information about CRAN packages.”\n\nSince our data sources themselves are packages, we think the repository will always be upto date thanks to github workflows! Here, let’s check number of packages our dataset has:\n\n\nCode\nsuppressMessages(library(dplyr))\noptions(repos = 'https://cloud.r-project.org/')\navailable.packages() %&gt;%\n    nrow()\n\n\n[1] 20113"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nOur research aim is to provide a comprehensive understanding of the factors influencing package popularity and characteristics within the ecosystem. We will investigate it through the following 4 subquestions:\n\nDependency Analysis: How do package dependencies (Depends, Imports, LinkingTo) influence the popularity or adoption of R packages?\nLicensing Trends: What are the prevailing trends in package licensing within the R ecosystem?\nMaintainability of Package: How version updates correlate with other package characteristics, such as the number of dependent packages and suggested packages, and the total number of downloads.\n\nIn addressing the first research question on dependency analysis, we will conduct a thorough data exploration to identify packages with the highest number of dependencies and analyze the distribution of packages based on the type and number of dependencies. To visualize these relationships, sankey diagrams and network graphs will be created, offering insights into the interconnectedness of packages.\nFor the second research question concerning licensing trends, our analysis will involve calculating the distribution of different license types and examining how the type of license affects the popularity of the package. We will use a bar chart to show the distribution of the license and ridge plots to show the difference in popularity for each license.\nLastly, the third research question about maintainability of R packages, we will explore how version updates correlate with characteristics like the number of dependent packages, suggested packages, and total download counts. Using a correlation heatmap, we aim to visualize these relationships, identifying potential associations between aspects of package versions such as dependencies, suggested packages, required R version, and download counts."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nlibrary(ggplot2)\n\ndf = read.csv(\"./assets/cran_packages.csv\")\n\nmissing_percentage &lt;- colMeans(is.na(df)) * 100\nmissing_df &lt;- data.frame(variables = names(missing_percentage), missing_percentage)\n\nggplot(missing_df, aes(x = reorder(variables, -missing_percentage), y = missing_percentage)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Percentage of Missing Data by Variable\", x = \"Variables\", y = \"Missing Percentage\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nAs you can see, for the first 7 variables more than 99% of rows are missing them so we dropped these columns.\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(redav)\nthreshold &lt;- 0.95\ndropped &lt;- df %&gt;% select(names(which(colMeans(is.na(.)) &lt;= threshold)))\nplot_missing(dropped,percent=TRUE)\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\nAfter excluding the previously identified columns, it becomes evident that six columns—Package, Versions, License, MD5, NeedsCompilation, and Repository—contain no missing values. Notably, the LinkingTo column, which signifies that the current package links to additional packages necessary for compilation or linking, has over 75% of its rows missing.\nFurthermore, two prevalent patterns emerge: the absence of both LinkingTo and Suggests, and the absence of both LinkingTo and Depends, each accounting for approximately 10% of the dataset. In this context, “Suggests” refers to other R packages recommended for additional features but not essential for basic functionality, while “Depends” indicates other R packages critical for the core functionality of the package.\nThis observed pattern is logical, as it underscores the nature of package dependencies. If a package doesn’t necessitate dependencies for its fundamental operations, it’s reasonable to assume that additional functionalities, such as those suggested or depended upon, would also not require additional dependencies."
  }
]